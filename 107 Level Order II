/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> rst = new ArrayList<List<Integer>>(); 
        List<Integer> list = new ArrayList<Integer>(); 
        if(root==null) return rst;

        Queue<TreeNode> q = new LinkedList<TreeNode>();
        //add root to queue
        q.add(root); 
        while(!q.isEmpty()){
            root = q.poll();
            list.add(root.val);

            if(q.isEmpty()) {
                rst.add(list); 
                list = new ArrayList<Integer>();

            }
            if(root.left!=null) q.add(root.left); 
            if(root.right!=null) q.add(root.right); 
        }
        
        for(int i=0; i<rst.size()/2; i++){
            List<Integer> temp = rst.get(i); 
            rst.set(i, rst.get(rst.size()-1-i));
            rst.set(rst.size()-1-i, temp);
        }
        return rst; 
        
    }
}
